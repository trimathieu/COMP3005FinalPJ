-- Create a user and password for access to the specified database

CREATE USER tristan WITH ENCRYPTED PASSWORD '';

-- Grant all privileges to the new user

GRANT ALL PRIVILEGES ON DATABASE comp3005 TO tristan;

-- Grant all privileges on all tables to the new user

GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO tristan;


-- Run the following command in your terminal to install node-postgres.

 

npm install pg

 

Connecting to PostgreSQL

 

The node-postgres module requires the following values to connect to a PostgreSQL database.

 

PGUSER - PostgreSQL username to connect as.

PGHOST - The name of the server host to connect to.

PGPASSWORD - The password of the PostgreSQL server.

PGDATABASE - The name of the database you are connecting to.

PGPORT - The port number to connect to at the server host.

 

Create a .env file in the directory and add these variables, substituting the corresponding values from your database:

 

PGUSER=<PGUSER>

PGHOST=<PGHOST>

PGPASSWORD=<PGPASSWORD>

PGDATABASE=<PGDATABASE>

PGPORT=<PGPORT>

Install the dotenv package to access the .env file.

 

npm install dotenv

In index.js, import and configure dotenv.

 

const dotenv = require("dotenv")

dotenv.config()

Connect to a PostgreSQL Database Using a Single Client

The code below shows how you can connect Node to a PostgreSQL server using a single client.

 

const { Client } = require("pg")

const dotenv = require("dotenv")

dotenv.config()

 

const connectDb = async () => {

try {

const client = new Client({

user: process.env.PGUSER,

host: process.env.PGHOST,

database: process.env.PGDATABASE,

password: process.env.PGPASSWORD,

port: process.env.PGPORT

})

 

await client.connect()

const res = await client.query('SELECT * FROM some_table')

console.log(res)

await client.end()

} catch (error) {

console.log(error)

}

}

 

connectDb()