-- Database: comp3005pj

-- DROP DATABASE IF EXISTS comp3005pj;

CREATE DATABASE comp3005pj
    WITH
    OWNER = postgres
    ENCODING = 'UTF8'
    LC_COLLATE = 'English_Canada.1252'
    LC_CTYPE = 'English_Canada.1252'
    TABLESPACE = pg_default
    CONNECTION LIMIT = -1
    IS_TEMPLATE = False;

COMMENT ON DATABASE comp3005pj
    IS 'COMP3005 Project database';

GRANT ALL ON DATABASE comp3005pj TO tristan;

GRANT ALL ON DATABASE comp3005pj TO postgres;

GRANT TEMPORARY, CONNECT ON DATABASE comp3005pj TO PUBLIC;


-- Table: public.address

-- DROP TABLE IF EXISTS public.address;

CREATE TABLE IF NOT EXISTS public.address
(
    aid integer NOT NULL,
    unit character varying(10) COLLATE pg_catalog."default" NOT NULL,
    street character varying(50) COLLATE pg_catalog."default" NOT NULL,
    city character varying(30) COLLATE pg_catalog."default" NOT NULL,
    state_prov character varying(30) COLLATE pg_catalog."default" NOT NULL,
    zip_postcode character varying(10) COLLATE pg_catalog."default" NOT NULL,
    country character varying(30) COLLATE pg_catalog."default",
    CONSTRAINT address_pkey PRIMARY KEY (aid)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.address
    OWNER to postgres;

GRANT ALL ON TABLE public.address TO tristan;

GRANT ALL ON TABLE public.address TO postgres;

-- Table: public.customer

-- DROP TABLE IF EXISTS public.customer;

CREATE TABLE IF NOT EXISTS public.customer
(
    username character varying(20) COLLATE pg_catalog."default" NOT NULL,
    userid integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    password character varying(20) COLLATE pg_catalog."default" NOT NULL,
    bill_add_id integer,
    ship_add_id integer,
    isowner boolean DEFAULT false,
    CONSTRAINT customer_pkey PRIMARY KEY (userid),
    CONSTRAINT customer_username_key UNIQUE (username),
    CONSTRAINT customer_bill_add_id_fkey FOREIGN KEY (bill_add_id)
        REFERENCES public.address (aid) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT customer_ship_add_id_fkey FOREIGN KEY (ship_add_id)
        REFERENCES public.address (aid) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.customer
    OWNER to postgres;

GRANT ALL ON TABLE public.customer TO tristan;

GRANT ALL ON TABLE public.customer TO postgres;

-- Table: public.publisher

-- DROP TABLE IF EXISTS public.publisher;

CREATE TABLE IF NOT EXISTS public.publisher
(
    pid integer NOT NULL,
    pname character varying(60) COLLATE pg_catalog."default",
    add_id integer NOT NULL,
    email character varying(40) COLLATE pg_catalog."default",
    phone character varying(12) COLLATE pg_catalog."default",
    bank_acct character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT publisher_pkey PRIMARY KEY (pid),
    CONSTRAINT publisher_add_id_fkey FOREIGN KEY (add_id)
        REFERENCES public.address (aid) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.publisher
    OWNER to postgres;

GRANT ALL ON TABLE public.publisher TO tristan;

GRANT ALL ON TABLE public.publisher TO postgres;

-- Table: public.book

--DROP TABLE IF EXISTS public.book;

CREATE TABLE IF NOT EXISTS public.book
(
    isbn character varying(16) COLLATE pg_catalog."default" NOT NULL,
    title character varying(100) COLLATE pg_catalog."default" NOT NULL,
    pubid integer NOT NULL,
    genres character varying(40) COLLATE pg_catalog."default" NOT NULL,
    author character varying(80) COLLATE pg_catalog."default" NOT NULL,
    pages integer NOT NULL,
    price character varying(10) COLLATE pg_catalog."default",
    pcttopub character varying(10) COLLATE pg_catalog."default",
    quantity integer,
    CONSTRAINT book_pkey PRIMARY KEY (isbn),
    CONSTRAINT book_pubid_fkey FOREIGN KEY (pubid)
        REFERENCES public.publisher (pid) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.book
    OWNER to postgres;

GRANT ALL ON TABLE public.book TO tristan;

GRANT ALL ON TABLE public.book TO postgres;

-- Table: public.customer_order

--DROP TABLE IF EXISTS public.customer_order;

CREATE TABLE IF NOT EXISTS public.customer_order
(
    orderid integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    user_id integer NOT NULL,
    isbn character varying(16) COLLATE pg_catalog."default" NOT NULL,
    quantity integer NOT NULL,
    track_no integer NOT NULL,
    ordertotal character varying(10) COLLATE pg_catalog."default",
    status character varying(20) COLLATE pg_catalog."default",
    item_id integer NOT NULL,
    order_date date NOT NULL DEFAULT CURRENT_DATE,
    CONSTRAINT customer_order_pkey PRIMARY KEY (orderid, item_id),
    CONSTRAINT customer_order_isbn_fkey FOREIGN KEY (isbn)
        REFERENCES public.book (isbn) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT customer_order_user_id_fkey FOREIGN KEY (user_id)
        REFERENCES public.customer (userid) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.customer_order
    OWNER to postgres;

GRANT ALL ON TABLE public.customer_order TO tristan;

-- Table: public.store

-- DROP TABLE IF EXISTS public.store;

CREATE TABLE IF NOT EXISTS public.store
(
    sid integer NOT NULL,
    sname character varying(60) COLLATE pg_catalog."default",
    addid integer,
    CONSTRAINT store_pkey PRIMARY KEY (sid),
    CONSTRAINT store_addid_fkey FOREIGN KEY (addid)
        REFERENCES public.address (aid) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.store
    OWNER to postgres;

GRANT ALL ON TABLE public.store TO tristan;

GRANT ALL ON TABLE public.store TO postgres;

--Seating records
INSERT INTO public.customer(
	username, userid, password, bill_add_id, ship_add_id, isowner)
	VALUES ('John', 123, 'Javatime', 1, 1, true);

INSERT INTO public.address(
	aid, unit, street, city, state_prov, zip_postcode, country)
	VALUES (1, '101', '10 Doubleday Rd', 'Dallas', 'Texas', '111111', null);

INSERT INTO public.publisher(
	pid, pname, add_id, email, phone, bank_acct)
	VALUES (1, 'Doubleday', 1, 'dday@yahoo.com', '555-555-5555', '2345-12245');

INSERT INTO public.publisher(
	pid, pname, add_id, email, phone, bank_acct)
	VALUES (2, 'Hunter Milfin', 1, 'hmiflin@gmail.com', '555-555-5050', '2374-58585');

INSERT INTO public.publisher(
	pid, pname, add_id, email, phone, bank_acct)
	VALUES (3, 'Random House', 1, 'frhouse@gmail.com', '555-555-5050', '2374-58585');